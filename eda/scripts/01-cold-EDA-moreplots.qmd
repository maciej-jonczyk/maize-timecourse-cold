---
title: "Explorative Data Analysis - cold and regrowth"
format: html
date: "2025-07-08"
execute:
  fig-format: png
  fig.dpi: 300
---

```{r setup}
#| include: false
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(root.dir = "/home/mj/project1-stat/eda/scripts")
```

Built with R version `r getRversion()`

# Data preparation

## Environment cleaning and set-up

```{r}
#| output: false
#| message: false
# Set working directory
#setwd("/media/mj/ANTIX-LIVE/project1-stat/scripts")

rm(list=ls())
```


```{r}
#| eval: false
#| output: false
#| message: false
# Clean working directory, if needed
rm(list=ls())
# Install required packages
## From Bioconductor
if (!require("BiocManager", quietly = TRUE))
    install.packages("BiocManager")

BiocManager::install("GenomicRanges")
BiocManager::install("DESeq2")
BiocManager::install("genefilter")
BiocManager::install("apeglm")

## From CRAN
install.packages("pheatmap")
install.packages("RColorBrewer")
install.packages("viridis")
install.packages("PoiClaClu")
install.packages("glmpca")
install.packages("ggplot2")
install.packages("dplyr")
```

## Load data

Loading of count data and metadata.
```{r data-loading, cache=TRUE}
#| output: false
#| message: false

library("GenomicRanges")
load("../../input-data/rdata/counts_and_metadata.RDa")
load("../../input-data/rdata/ranges.RDa")
```

## Create DEseq Data Set

```{r dds, cache=TRUE}
#| output: false
#| message: false
library("DESeq2")
# create dataset, design included only for command completeness, different will be used
dds=DESeqDataSetFromMatrix(countData=cts, colData=coldata, rowRanges=gzakresy, design= ~ tissue+line+time)
```

## Pre-filtering

```{r filter, cache=TRUE}
# keeping genes having at least 3 samples with a count of 10 or higher
keep <- rowSums(counts(dds) >= 10) >= 3
dds.f <- dds[keep,]
dim(dds.f)

# what percent of genes remained?
100*(dim(dds.f)[1]/dim(dds)[1])
```

## Normalization

According to [post](https://www.biostars.org/p/459013/#459016) `varianceStabilizingTransformation` not `vst` is used. Design is provided here only because it is required in `dds` object. Here full data are explored but eventually it will be analyzed separately by tissue. Also, it makes no sense using `blind=FALSE` here.

```{r normalize, cache=TRUE}
vsd=varianceStabilizingTransformation(dds.f, blind=TRUE)
```

# Explorarive data analysis

```{r packages-visual, cache=TRUE}
#| output: false
#| message: false
library(pheatmap)
library(RColorBrewer)
library(viridis)
library(PoiClaClu)
library(DESeq2)
library(ggplot2)
```

## PCA plots

Dataset is partitioned primarily by tissue
```{r pca-all-tissue, cache=TRUE}
plotPCA(vsd, intgroup = c("tissue"), ntop=33000) +
  ggtitle("PCA – color by tissue") +
  theme(plot.title = element_text(hjust = 0.5))
```
Separation by line is also visible in PC2
```{r pca-all-line, cache=TRUE}
plotPCA(vsd, intgroup = c("line"), ntop=33000) +
  ggtitle("PCA – color by inbred line") +
  theme(plot.title = element_text(hjust = 0.5))
```

```{r pca-pcs23, cache=TRUE}
#| eval: false
#| include: false
# Code to see the separation of samples in PC2 and PC3
# Little variance so not showing it in report
plotPCA(vsd, intgroup = c("Mread_bin"), ntop=33000, pcs=2:3) +
  ggtitle("PCA – color by binned million of reads") +
  theme(plot.title = element_text(hjust = 0.5))
```

So tissues should be analyzed separately

# Splitting of data by tissue

```{r split-data, cache=TRUE}
# https://bioconductor.org/packages/devel/bioc/vignettes/SummarizedExperiment/inst/doc/SummarizedExperiment.html#subsetting
vsd.leaf=vsd[, vsd$tissue == 'leaf']
vsd.sam=vsd[, vsd$tissue == 'sam']

# check
dim(vsd.leaf)
dim(vsd.sam)
```

Datasets are separated by line
```{r pca-line, cache=TRUE}
#| layout-ncol: 2
#| layout-nrow: 2
plotPCA(vsd.leaf, intgroup = c("line"), ntop=33000) +
  ggtitle("PCA for leaf – color by inbred line") +
  theme(plot.title = element_text(hjust = 0.5))
plotPCA(vsd.sam, intgroup = c("line"), ntop=33000) +
  ggtitle("PCA for sam – color by inbred line") +
  theme(plot.title = element_text(hjust = 0.5))
plotPCA(vsd.leaf, intgroup = c("line"), ntop=33000, pcs=2:3) +
  ggtitle("PCA for leaf – color by inbred line. PC2 vs PC3") +
  theme(plot.title = element_text(hjust = 0.5))
plotPCA(vsd.sam, intgroup = c("line"), ntop=33000, pcs=2:3) +
  ggtitle("PCA for sam – color by inbred line. PC2 vs PC3") +
  theme(plot.title = element_text(hjust = 0.5))
```

Condition (cold/regrowth)

```{r pca-condition, cache=TRUE}
#| layout-ncol: 2
#| layout-nrow: 2
plotPCA(vsd.leaf, intgroup = c("condition"), ntop=33000) +
  ggtitle("PCA for leaf – color by growth temperature") +
  theme(plot.title = element_text(hjust = 0.5))
plotPCA(vsd.sam, intgroup = c("condition"), ntop=33000) +
  ggtitle("PCA for sam – color by growth temperature") +
  theme(plot.title = element_text(hjust = 0.5))
plotPCA(vsd.leaf, intgroup = c("condition"), ntop=33000, pcs=2:3) +
  ggtitle("PCA for leaf – color by growth temperature. PC2 vs PC3") +
  theme(plot.title = element_text(hjust = 0.5))
plotPCA(vsd.sam, intgroup = c("condition"), ntop=33000, pcs=2:3) +
  ggtitle("PCA for sam – color by growth temperature. PC2 vs PC3") +
  theme(plot.title = element_text(hjust = 0.5))
```

Day

```{r pca-day, cache=TRUE}
#| layout-ncol: 2
#| layout-nrow: 2
plotPCA(vsd.leaf, intgroup = c("day"), ntop=33000) +
  ggtitle("PCA for leaf – color by day") +
  theme(plot.title = element_text(hjust = 0.5))
plotPCA(vsd.sam, intgroup = c("day"), ntop=33000) +
  ggtitle("PCA for sam – color by day") +
  theme(plot.title = element_text(hjust = 0.5))
plotPCA(vsd.leaf, intgroup = c("day"), ntop=33000, pcs=2:3) +
  ggtitle("PCA for leaf – color by day. PC2 vs PC3") +
  theme(plot.title = element_text(hjust = 0.5))
plotPCA(vsd.sam, intgroup = c("day"), ntop=33000, pcs=2:3) +
  ggtitle("PCA for sam – color by day. PC2 vs PC3") +
  theme(plot.title = element_text(hjust = 0.5))
```

Time of a day
1 = dawn; 2 = day; 3 = dusk

```{r pca-time, cache=TRUE}
#| layout-ncol: 2
#| layout-nrow: 2
plotPCA(vsd.leaf, intgroup = c("time"), ntop=33000) +
  ggtitle("PCA for leaf – color by time of day") +
  theme(plot.title = element_text(hjust = 0.5))
plotPCA(vsd.sam, intgroup = c("time"), ntop=33000) +
  ggtitle("PCA for sam – color by time of day") +
  theme(plot.title = element_text(hjust = 0.5))
plotPCA(vsd.leaf, intgroup = c("time"), ntop=33000, pcs=2:3) +
  ggtitle("PCA for leaf – color by time of day. PC2 vs PC3") +
  theme(plot.title = element_text(hjust = 0.5))
plotPCA(vsd.sam, intgroup = c("time"), ntop=33000, pcs=2:3) +
  ggtitle("PCA for sam – color by time of day. PC2 vs PC3") +
  theme(plot.title = element_text(hjust = 0.5))
```

It is noteworthy, that variance of PC3 is not very smaller than that of PC2. PC4 explains only 6% of variance.
Interesting effect is visible when plotting PCs 2 and 3. Line a554 is separated from the rest in SAM but not in leaf where S84 outstands.